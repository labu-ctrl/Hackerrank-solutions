Task
Given set, s= {1,2,3,4……n} find:

the maximum value of a&b which is less than a given integer k , where a and b (where a < b) are two integers from set S. 
the maximum value of a|b which is less than a given integer k, where a and b (where a < b) are two integers from set S.
the maximum value of a XOR b which is less than a given integer k, where a and b (where a < b) are two integers from set S.
Input Format
The only line contains 2 space-separated integers n, and k, respectively.

Constraints
 2<=n<=10^3
 2<=k<=n
Output Format
The first line of output contains the maximum possible value of  a & b.
The second line of output contains the maximum possible value of  a | b.
The second line of output contains the maximum possible value of  a XOR b.

Sample Input :
5 4
Sample Output :
2
3
3

n = 5, k =4
S = {1,2,3,4,5}
All possible values of a and b are:

a = 1, b = 2 ; a&b = 0  a|b = 3  a XOR b = 3
a = 1, b = 3 ; a&b = 1  a|b = 3  a XOR b = 2
a = 1, b = 4 ; a&b = 0  a|b = 5  a XOR b = 5
a = 1, b = 5 ; a&b = 1  a|b = 5  a XOR b = 4
a = 2, b = 3 ; a&b = 2  a|b = 3  a XOR b = 1
a = 2, b = 4 ; a&b = 0  a|b = 6  a XOR b = 6
a = 2, b = 5 ; a&b = 0  a|b = 7  a XOR b = 7
a = 3, b = 4 ; a&b = 0  a|b = 7  a XOR b = 7
a = 3, b = 5 ; a&b = 1  a|b = 7  a XOR b = 6
a = 4, b = 5 ; a&b = 4  a|b = 5  a XOR b = 1 
The maximum possible value of a&b that is also <(k=4) is 2, so we print 2 on first line.
The maximum possible value of a|b that is also <(k=4) is 3, so we print 3 on first line.
The maximum possible value of a XOR b that is also <(k=4) is 3, so we print 3 on first line.


#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
//Complete the following function.


void calculate_the_maximum(int n, int k) {
  //Write your code here.
   int mxAND=0,mxOR=0,mxXOR=0;
  for(int i=1;i<=k;i++){
      for(int j=i+1;j<=n;j++){
          if(mxAND<(i & j) && (i&j)<k)
            mxAND=i&j;
          if(mxOR<(i|j)&&(i|j)<k)
            mxOR=i|j;
          if(mxXOR<(i^j)&&(i^j)<k)
            mxXOR=i^j;
          
      }
     
  }
   printf("%d",mxAND);
   printf("\n%d",mxOR);
   printf("\n%d",mxXOR);
}

int main() {
    int n, k;
  
    scanf("%d %d", &n, &k);
    calculate_the_maximum(n, k);
 
    return 0;
}
